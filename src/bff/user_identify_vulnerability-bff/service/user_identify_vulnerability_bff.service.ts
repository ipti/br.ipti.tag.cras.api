import { HttpException, Injectable } from '@nestjs/common';
import { Request } from 'express';
import { PrismaService } from 'src/prisma/prisma.service';
import { CreateUserIdentifyVulnerabilityDto } from '../dto/create-user_identify_vulnerability_bff.dto';
import { optionalKeyValidation } from 'src/utils/optionalKeysValidation';

@Injectable()
export class UserIdentifyVulnerabilityBffService {
  constructor(private readonly prismaService: PrismaService) {}

  async createUserIdentifyVulnerability(
    userIdentifyVulnerabilityCreate: CreateUserIdentifyVulnerabilityDto,
  ) {
    const userIdentifyVulnerability =
      await this.prismaService.user_identify_vulnerability.create({
        data: {
          ...userIdentifyVulnerabilityCreate,
          user_identify: {
            connect: {
              id: userIdentifyVulnerabilityCreate.user_identify,
            },
          },
        },
      });

    return userIdentifyVulnerability;
  }

  async getUserIdentifyVulnerabilityByUserIdentifyId(userIdentifyId: string) {
    const userIdentifyVulnerability =
      await this.prismaService.user_identify_vulnerability.findFirst({
        where: {
          user_identify_fk: +userIdentifyId,
        },
      });

    return userIdentifyVulnerability;
  }
}
