import {
  Body,
  Controller,
  Delete,
  Get,
  Param,
  Patch,
  Post,
  Query,
  Req,
  UseGuards,
  Put,
} from '@nestjs/common';
import {
  ApiBearerAuth,
  ApiCreatedResponse,
  ApiOkResponse,
  ApiTags,
} from '@nestjs/swagger';
import { UserIdentifyVulnerabilityBffService } from './service/user_identify_vulnerability_bff.service';
import { Request } from 'express';
import { JwtAuthGuard } from 'src/auth/shared/jwt-auth.guard';
import { CreateUserIdentifyVulnerabilityDto } from './dto/create-user_identify_vulnerability_bff.dto';

@ApiTags('UserIdentifyVulnerabilityBff')
@UseGuards(JwtAuthGuard)
@ApiBearerAuth('access-token')
@Controller()
export class UserIdentifyVulnerabilityBffController {
  constructor(
    private readonly UserIdentifyVulnerabilityBffService: UserIdentifyVulnerabilityBffService,
  ) {}

  @Post()
  @ApiOkResponse({ isArray: true })
  createUserIdentifyVulnerability(
    @Body() UserIdentifyVulnerabilityCreate: CreateUserIdentifyVulnerabilityDto,
  ) {
    return this.UserIdentifyVulnerabilityBffService.createUserIdentifyVulnerability(
      UserIdentifyVulnerabilityCreate,
    );
  }

  @Get()
  @ApiOkResponse({ isArray: true })
  getUserIdentifyVulnerabilityByUserIdentifyId(
    @Query('userIdentifyId') userIdentifyId: string,
  ) {
    return this.UserIdentifyVulnerabilityBffService.getUserIdentifyVulnerabilityByUserIdentifyId(
      userIdentifyId,
    );
  }
}
